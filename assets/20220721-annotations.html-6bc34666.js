const e=JSON.parse('{"key":"v-4e10d8c0","path":"/java-tutorial/javase-series/20220721-annotations.html","title":"深入浅出 Java 注解","lang":"zh-CN","frontmatter":{"isOriginal":true,"order":1,"category":["Java 基础"],"tag":["Java"],"description":"深入浅出 Java 注解 共勉 不要哀求，学会争取。若是如此，终有所获。 注解简介 所谓注解，其实就像一种拥有特定作用的注释，自 JDK1.5 及之后版本所引入的特性，它是放在 Java 源码的类、方法、字段、参数前的一种用作标注的“元数据”，与类、接口、枚举处于同一个层次中。 通过其作用的不同，我们常常将注解分为如下 3 类： 编写文档：通过代码中标识的注解生成对应文档（即类似于 Java doc 的文档）； 代码分析：通过代码中标识的注解对代码进行分析（使用反射）； 编译检查：通过代码中标识的注解让编译器能实现基本的编译检查（@Override）；","head":[["meta",{"property":"og:url","content":"https://cunyu1943.github.io/java-tutorial/javase-series/20220721-annotations.html"}],["meta",{"property":"og:site_name","content":"JavaPark"}],["meta",{"property":"og:title","content":"深入浅出 Java 注解"}],["meta",{"property":"og:description","content":"深入浅出 Java 注解 共勉 不要哀求，学会争取。若是如此，终有所获。 注解简介 所谓注解，其实就像一种拥有特定作用的注释，自 JDK1.5 及之后版本所引入的特性，它是放在 Java 源码的类、方法、字段、参数前的一种用作标注的“元数据”，与类、接口、枚举处于同一个层次中。 通过其作用的不同，我们常常将注解分为如下 3 类： 编写文档：通过代码中标识的注解生成对应文档（即类似于 Java doc 的文档）； 代码分析：通过代码中标识的注解对代码进行分析（使用反射）； 编译检查：通过代码中标识的注解让编译器能实现基本的编译检查（@Override）；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cunyu1943.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-27T01:05:55.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"深入浅出 Java 注解"}],["meta",{"property":"article:author","content":"村雨遥"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2023-08-27T01:05:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入浅出 Java 注解\\",\\"image\\":[\\"https://cunyu1943.github.io/\\"],\\"dateModified\\":\\"2023-08-27T01:05:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"村雨遥\\",\\"url\\":\\"https://cunyu1943.github.io\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"注解简介","slug":"注解简介","link":"#注解简介","children":[]},{"level":2,"title":"常用的预定义注解","slug":"常用的预定义注解","link":"#常用的预定义注解","children":[{"level":3,"title":"@Override","slug":"override","link":"#override","children":[]},{"level":3,"title":"@Deprecated","slug":"deprecated","link":"#deprecated","children":[]},{"level":3,"title":"@SuppressWarnings","slug":"suppresswarnings","link":"#suppresswarnings","children":[]}]},{"level":2,"title":"自定义注解","slug":"自定义注解","link":"#自定义注解","children":[{"level":3,"title":"格式","slug":"格式","link":"#格式","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]}]},{"level":2,"title":"元注解","slug":"元注解","link":"#元注解","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"常用的元注解","slug":"常用的元注解","link":"#常用的元注解","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1693098355000,"updatedTime":1693098355000,"contributors":[{"name":"cunyu1943","email":"747731461@qq.com","commits":1}]},"readingTime":{"minutes":6.79,"words":2036},"filePathRelative":"java-tutorial/javase-series/20220721-annotations.md","localizedDate":"2023年8月27日","excerpt":"<h1> 深入浅出 Java 注解</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">共勉</p>\\n<p>不要哀求，学会争取。若是如此，终有所获。</p>\\n</div>\\n<h2> 注解简介</h2>\\n<p>所谓注解，其实就像一种拥有特定作用的注释，自 JDK1.5 及之后版本所引入的特性，它是放在 Java 源码的类、方法、字段、参数前的一种用作标注的“元数据”，与类、接口、枚举处于同一个层次中。</p>\\n<p>通过其作用的不同，我们常常将注解分为如下 3 类：</p>\\n<ol>\\n<li><strong>编写文档</strong>：通过代码中标识的注解生成对应文档（即类似于 Java doc 的文档）；</li>\\n<li><strong>代码分析</strong>：通过代码中标识的注解对代码进行分析（使用反射）；</li>\\n<li><strong>编译检查</strong>：通过代码中标识的注解让编译器能实现基本的编译检查（<code>@Override</code>）；</li>\\n</ol>","copyright":{"author":"村雨遥","license":"著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处"},"autoDesc":true}');export{e as data};
